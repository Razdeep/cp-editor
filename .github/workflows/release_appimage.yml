name: "Release AppImage"

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: "Release AppImage"
    runs-on: 'ubuntu-16.04'

    steps:
    - uses: actions/checkout@v2

    - name: Fetch submodules
      run: git submodule update --init --recursive

    - name: Install Qt
      run: |
        sudo add-apt-repository ppa:beineri/opt-qt-5.12.7-xenial -y
        sudo apt-get update -qq
        sudo apt-get -y install qt512base libgl1-mesa-dev qt512svg qt512imageformats
        bash /opt/qt*/bin/qt*-env.sh

    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build .

    - name: Get the version
      id: get_version
      shell: bash
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Pack to AppImage
      run: |
        bash /opt/qt*/bin/qt*-env.sh
        cd build
        wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt*.AppImage
        export VERSION=${{ steps.get_version.outputs.VERSION }}
        mv ../.ci/linux/default.desktop . && mv ../.ci/linux/icon.png .
        ./linuxdeployqt*.AppImage ./CPEditor -appimage -qmake=/opt/qt512/bin/qmake

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: ${{ endsWith(github.ref, 'beta') }}
        files: build/CP_Editor-${{ steps.get_version.outputs.VERSION }}-x86_64.AppImage
        name: CP Editor ${{ steps.get_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
